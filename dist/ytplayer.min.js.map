{
  "version": 3,
  "sources": ["../src/ytplayer.js"],
  "sourcesContent": ["/*\n * @name          ytplayer.js\n * @version       1.1.0\n * @lastmodified  2018-02-06\n * @author        Saeid Mohadjer\n * @repo\t\t  https://github.com/smohadjer/youtube-playlist\n *\n * Licensed under the MIT License\n */\n\n'use strict';\n\nexport default class YTPlayer {\n\tconstructor(options) {\n\t\tthis.element = options.element;\n\t\tthis.cb_playlist_click = options.cb_playlist_click;\n\t\tthis.cb_init = options.cb_init;\n\t\tthis.playlistId = this.element.getAttribute('data-playlist-id');\n\t\tthis.videoId = this.element.getAttribute('data-video-id');\n\n\t\tif (this.playlistId) {\n\t\t\tthis.fetchPlaylist();\n\t\t} else {\n\t\t\tthis.fetchVideo();\n\t\t}\n\t}\n\n\tfetchVideo() {\n\t\t/*global gapi*/\n\t\tgapi.client.youtube.videos.list({\n\t\t\tpart: 'snippet',\n\t\t\tid: this.videoId\n\t\t}).then((response) => {\n\t\t\tconst snippet = response.result.items[0].snippet;\n\t\t\tthis.showVideo(this.videoId);\n\t\t\tthis.updateVideoInfo(snippet.title, snippet.description);\n\t\t\tif (typeof this.cb_init === 'function') {\n\t\t\t\tthis.cb_init();\n\t\t\t}\n\t\t});\n\t}\n\n\tfetchPlaylist() {\n\t\tgapi.client.youtube.playlistItems.list({\n\t\t\tpart: 'snippet',\n\t\t\tplaylistId: this.playlistId,\n\t\t\tmaxResults: 50\n\t\t}).then((response) => {\n\n\t\t\tlet items = response.result.items;\n\t\t\tlet videoId;\n\n\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\tconst snippet = items[i].snippet;\n\t\t\t\tthis.addItem(snippet);\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvideoId = snippet.resourceId.videoId;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//display first video in playlist\n\t\t\tthis.showVideo(videoId);\n\t\t\tlet li = this.element.querySelectorAll('.ytplayer-list li')[0];\n\t\t\tthis.updatePlaylist(li);\n\t\t\tif (typeof this.cb_init === 'function') {\n\t\t\t\tthis.cb_init();\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateVideo(li) {\n\t\tconst videoId = li.getAttribute('data-id');\n\t\tthis.player.loadVideoById(videoId);\n\t}\n\n\tupdatePlaylist(li) {\n\t\tconst ul = li.parentNode;\n\t\tconst thumbs = ul.querySelectorAll('li');\n\n\t\tArray.prototype.forEach.call(thumbs, function(el){\n\t\t\tel.classList.remove('selected');\n\t\t});\n\n\t\tli.classList.add('selected');\n\n\t\tthis.updateVideoInfo(li.getAttribute('data-title'), li.getAttribute('data-description'));\n\t}\n\n\tupdateVideoInfo(title, description) {\n\t\tconst titleElement = this.element.querySelector('.ytplayer-title');\n\t\tconst descriptionElement = this.element.querySelector('.ytplayer-description');\n\n\t\tif (titleElement) {\n\t\t\ttitleElement.innerHTML = title;\n\t\t}\n\n\t\tif (descriptionElement) {\n\t\t\tdescriptionElement.innerHTML = description;\n\t\t}\n\t}\n\n\taddItem(snippet) {\n\t\tconst ul = this.element.querySelector('.ytplayer-list');\n\n\t\tif (!snippet.thumbnails) {\n\t\t\tconsole.warn('Item has no thumbnails!', snippet);\n\t\t\treturn;\n\t\t}\n\n\t\tconst thumbnail = snippet.thumbnails.medium.url;\n\t\tconst videoId = snippet.resourceId.videoId;\n\t\tconst img = `<img src=\"${thumbnail}\" />`;\n\t\tconst li = document.createElement('li');\n\n\t\tli.innerHTML = img;\n\t\tli.setAttribute('data-id', videoId);\n\t\tli.setAttribute('data-title', snippet.title);\n\t\tli.setAttribute('data-description', snippet.description);\n\t\tli.addEventListener('click', (event) => {\n\t\t\tconst li = event.target.parentNode;\n\t\t\tthis.updatePlaylist(li);\n\t\t\tthis.updateVideo(li);\n\n\t\t\tif (typeof this.cb_playlist_click === 'function') {\n\t\t\t\tthis.cb_playlist_click(li);\n\t\t\t}\n\t\t});\n\n\t\tul.appendChild(li);\n\t}\n\n\tshowVideo(videoId) {\n\t\t/*global YT*/\n\t\tthis.player = new YT.Player(this.element.querySelector('.ytplayer-video'), {\n\t\t\tvideoId: videoId,\n\t\t\tplayerVars: {\n\t\t\t\t'rel': 0,\n\t\t\t\t'showinfo': 0\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\t//'onReady': onPlayerReady,\n\t\t\t\t//'onStateChange': onPlayerStateChange\n\t\t\t}\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["YTPlayer", "options", "response", "snippet", "items", "videoId", "i", "li", "thumbs", "el", "title", "description", "titleElement", "descriptionElement", "ul", "thumbnail", "img", "event"]
}
