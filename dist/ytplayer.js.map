{"version":3,"sources":["ytplayer.js"],"names":["YTPlayer","element","playlistId","getAttribute","videoId","fetchPlaylist","fetchVideo","request","gapi","client","youtube","videos","list","part","id","then","response","snippet","result","items","showVideo","updateVideoInfo","title","description","playlistItems","maxResults","i","length","addItem","resourceId","li","querySelectorAll","updatePlaylist","player","loadVideoById","ul","parentNode","thumbs","Array","prototype","forEach","call","el","classList","remove","add","titleElement","querySelector","descriptionElement","innerHTML","thumbnail","thumbnails","medium","url","img","document","createElement","setAttribute","addEventListener","event","target","updateVideo","appendChild","YT","Player","playerVars","events"],"mappings":"AAAA;;;;;;;;;;AAUA;;;;;;IAEMA,Q;AACL,mBAAYC,OAAZ,EAAqB;AAAA;;AACpB,OAAKA,OAAL,GAAeA,OAAf;AACA,OAAKC,UAAL,GAAkB,KAAKD,OAAL,CAAaE,YAAb,CAA0B,kBAA1B,CAAlB;AACA,OAAKC,OAAL,GAAe,KAAKH,OAAL,CAAaE,YAAb,CAA0B,eAA1B,CAAf;;AAEA,MAAI,KAAKD,UAAT,EAAqB;AACpB,QAAKG,aAAL;AACA,GAFD,MAEO;AACN,QAAKC,UAAL;AACA;AACD;;;;+BAEY;AAAA;;AACZ,OAAMC,UAAUC,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,MAApB,CAA2BC,IAA3B,CAAgC;AAC/CC,UAAM,SADyC;AAE/CC,QAAI,KAAKV;AAFsC,IAAhC,EAGbW,IAHa,CAGR,UAACC,QAAD,EAAc;AACrB,QAAMC,UAAUD,SAASE,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBF,OAAzC;AACA,UAAKG,SAAL,CAAe,MAAKhB,OAApB;AACA,UAAKiB,eAAL,CAAqBJ,QAAQK,KAA7B,EAAoCL,QAAQM,WAA5C;AACA,IAPe,CAAhB;AAQA;;;kCAEe;AAAA;;AACf,OAAMhB,UAAUC,KAAKC,MAAL,CAAYC,OAAZ,CAAoBc,aAApB,CAAkCZ,IAAlC,CAAuC;AACtDC,UAAM,SADgD;AAEtDX,gBAAY,KAAKA,UAFqC;AAGtDuB,gBAAY;AAH0C,IAAvC,EAIbV,IAJa,CAIR,UAACC,QAAD,EAAc;;AAErB,QAAIG,QAAQH,SAASE,MAAT,CAAgBC,KAA5B;AACA,QAAIf,gBAAJ;;AAEA,SAAK,IAAIsB,IAAI,CAAb,EAAgBA,IAAIP,MAAMQ,MAA1B,EAAkCD,GAAlC,EAAuC;AACtC,SAAMT,UAAUE,MAAMO,CAAN,EAAST,OAAzB;AACA,YAAKW,OAAL,CAAaX,OAAb;AACA,SAAIS,MAAM,CAAV,EAAa;AACZtB,gBAAUa,QAAQY,UAAR,CAAmBzB,OAA7B;AACA;AACD;;AAED;AACA,WAAKgB,SAAL,CAAehB,OAAf;AACA,QAAI0B,KAAK,OAAK7B,OAAL,CAAa8B,gBAAb,CAA8B,mBAA9B,EAAmD,CAAnD,CAAT;AACA,WAAKC,cAAL,CAAoBF,EAApB;AACA,IArBe,CAAhB;AAsBA;;;8BAEWA,E,EAAI;AACf,OAAM1B,UAAU0B,GAAG3B,YAAH,CAAgB,SAAhB,CAAhB;AACA,QAAK8B,MAAL,CAAYC,aAAZ,CAA0B9B,OAA1B;AACA;;;iCAEc0B,E,EAAI;AAClB,OAAMK,KAAKL,GAAGM,UAAd;AACA,OAAMC,SAASF,GAAGJ,gBAAH,CAAoB,IAApB,CAAf;;AAEAO,SAAMC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BJ,MAA7B,EAAqC,UAASK,EAAT,EAAahB,CAAb,EAAe;AACnDgB,OAAGC,SAAH,CAAaC,MAAb,CAAoB,UAApB;AACA,IAFD;;AAIAd,MAAGa,SAAH,CAAaE,GAAb,CAAiB,UAAjB;;AAEA,QAAKxB,eAAL,CAAqBS,GAAG3B,YAAH,CAAgB,YAAhB,CAArB,EAAoD2B,GAAG3B,YAAH,CAAgB,kBAAhB,CAApD;AACA;;;kCAEemB,K,EAAOC,W,EAAa;AACnC,OAAMuB,eAAe,KAAK7C,OAAL,CAAa8C,aAAb,CAA2B,iBAA3B,CAArB;AACA,OAAMC,qBAAqB,KAAK/C,OAAL,CAAa8C,aAAb,CAA2B,uBAA3B,CAA3B;;AAEA,OAAID,YAAJ,EAAkB;AACjBA,iBAAaG,SAAb,GAAyB3B,KAAzB;AACA;;AAED,OAAI0B,kBAAJ,EAAwB;AACvBA,uBAAmBC,SAAnB,GAA+B1B,WAA/B;AACA;AACD;;;0BAEON,O,EAAS;AAAA;;AAChB,OAAMkB,KAAK,KAAKlC,OAAL,CAAa8C,aAAb,CAA2B,gBAA3B,CAAX;AACA,OAAMG,YAAYjC,QAAQkC,UAAR,CAAmBC,MAAnB,CAA0BC,GAA5C;AACA,OAAMjD,UAAUa,QAAQY,UAAR,CAAmBzB,OAAnC;AACA,OAAMkD,qBAAmBJ,SAAnB,SAAN;AACA,OAAMpB,KAAKyB,SAASC,aAAT,CAAuB,IAAvB,CAAX;;AAEA1B,MAAGmB,SAAH,GAAeK,GAAf;AACAxB,MAAG2B,YAAH,CAAgB,SAAhB,EAA2BrD,OAA3B;AACA0B,MAAG2B,YAAH,CAAgB,YAAhB,EAA8BxC,QAAQK,KAAtC;AACAQ,MAAG2B,YAAH,CAAgB,kBAAhB,EAAoCxC,QAAQM,WAA5C;AACAO,MAAG4B,gBAAH,CAAoB,OAApB,EAA6B,UAACC,KAAD,EAAW;AACvC,QAAM7B,KAAK6B,MAAMC,MAAN,CAAaxB,UAAxB;AACA,WAAKJ,cAAL,CAAoBF,EAApB;AACA,WAAK+B,WAAL,CAAiB/B,EAAjB;AACA,IAJD;;AAMAK,MAAG2B,WAAH,CAAehC,EAAf;AACA;;;4BAES1B,O,EAAS;AAClB,QAAK6B,MAAL,GAAc,IAAI8B,GAAGC,MAAP,CAAc,KAAK/D,OAAL,CAAa8C,aAAb,CAA2B,iBAA3B,CAAd,EAA6D;AAC1E3C,aAASA,OADiE;AAE1E6D,gBAAY;AACX,iBAAY,CADD;AAEX,YAAO,CAFI;AAGX,iBAAY;AAHD,KAF8D;AAO1EC,YAAQ;AACP;AACA;AAFO;AAPkE,IAA7D,CAAd;AAYA","file":"ytplayer.js","sourcesContent":["/*\n * @name          ytplayer.js\n * @version       1.0.1\n * @lastmodified  2018-02-06\n * @author        Saeid Mohadjer\n * @repo\t\t  https://github.com/smohadjer/youtube-playlist\n *\n * Licensed under the MIT License\n */\n\n'use strict';\n\nclass YTPlayer {\n\tconstructor(element) {\n\t\tthis.element = element;\n\t\tthis.playlistId = this.element.getAttribute('data-playlist-id');\n\t\tthis.videoId = this.element.getAttribute('data-video-id');\n\n\t\tif (this.playlistId) {\n\t\t\tthis.fetchPlaylist();\n\t\t} else {\n\t\t\tthis.fetchVideo();\n\t\t}\n\t}\n\n\tfetchVideo() {\n\t\tconst request = gapi.client.youtube.videos.list({\n\t\t\tpart: 'snippet',\n\t\t\tid: this.videoId\n\t\t}).then((response) => {\n\t\t\tconst snippet = response.result.items[0].snippet;\n\t\t\tthis.showVideo(this.videoId);\n\t\t\tthis.updateVideoInfo(snippet.title, snippet.description);\n\t\t});\n\t}\n\n\tfetchPlaylist() {\n\t\tconst request = gapi.client.youtube.playlistItems.list({\n\t\t\tpart: 'snippet',\n\t\t\tplaylistId: this.playlistId,\n\t\t\tmaxResults: 50\n\t\t}).then((response) => {\n\n\t\t\tlet items = response.result.items;\n\t\t\tlet videoId;\n\n\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\tconst snippet = items[i].snippet;\n\t\t\t\tthis.addItem(snippet);\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvideoId = snippet.resourceId.videoId;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//display first video in playlist\n\t\t\tthis.showVideo(videoId);\n\t\t\tlet li = this.element.querySelectorAll('.ytplayer-list li')[0];\n\t\t\tthis.updatePlaylist(li);\n\t\t});\n\t}\n\n\tupdateVideo(li) {\n\t\tconst videoId = li.getAttribute('data-id');\n\t\tthis.player.loadVideoById(videoId);\n\t}\n\n\tupdatePlaylist(li) {\n\t\tconst ul = li.parentNode;\n\t\tconst thumbs = ul.querySelectorAll('li');\n\n\t\tArray.prototype.forEach.call(thumbs, function(el, i){\n\t\t\tel.classList.remove('selected');\n\t\t});\n\n\t\tli.classList.add('selected');\n\n\t\tthis.updateVideoInfo(li.getAttribute('data-title'), li.getAttribute('data-description'));\n\t}\n\n\tupdateVideoInfo(title, description) {\n\t\tconst titleElement = this.element.querySelector('.ytplayer-title');\n\t\tconst descriptionElement = this.element.querySelector('.ytplayer-description');\n\n\t\tif (titleElement) {\n\t\t\ttitleElement.innerHTML = title;\n\t\t}\n\n\t\tif (descriptionElement) {\n\t\t\tdescriptionElement.innerHTML = description;\n\t\t}\n\t}\n\n\taddItem(snippet) {\n\t\tconst ul = this.element.querySelector('.ytplayer-list');\n\t\tconst thumbnail = snippet.thumbnails.medium.url;\n\t\tconst videoId = snippet.resourceId.videoId;\n\t\tconst img = `<img src=\"${thumbnail}\" />`;\n\t\tconst li = document.createElement('li');\n\n\t\tli.innerHTML = img;\n\t\tli.setAttribute('data-id', videoId);\n\t\tli.setAttribute('data-title', snippet.title);\n\t\tli.setAttribute('data-description', snippet.description);\n\t\tli.addEventListener('click', (event) => {\n\t\t\tconst li = event.target.parentNode;\n\t\t\tthis.updatePlaylist(li);\n\t\t\tthis.updateVideo(li);\n\t\t});\n\n\t\tul.appendChild(li);\n\t}\n\n\tshowVideo(videoId) {\n\t\tthis.player = new YT.Player(this.element.querySelector('.ytplayer-video'), {\n\t\t\tvideoId: videoId,\n\t\t\tplayerVars: {\n\t\t\t\t'autoplay': 0,\n\t\t\t\t'rel': 0,\n\t\t\t\t'showinfo': 0\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\t//'onReady': onPlayerReady,\n\t\t\t\t//'onStateChange': onPlayerStateChange\n\t\t\t}\n\t\t});\n\t}\n}\n"]}